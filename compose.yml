version: '3.8'
services:
  db:
    container_name: airport-db
    image: postgres:latest
    volumes:
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql:ro
      - db-data:/var/lib/postgresql/data
    networks:
      - net
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: airport

  api-build:
    container_name: airport-api-build
    build:
      context: .
      dockerfile_inline: |
        FROM mcr.microsoft.com/dotnet/sdk:8.0
        COPY ./Airport/AirportAPI /build/AirportAPI
        COPY ./Airport/AirportAPI.Models /build/AirportAPI.Models
        WORKDIR /build/AirportAPI
        ENTRYPOINT [ "dotnet", "publish", "--nologo", "-o", "/app" ]
    volumes:
      - api-app:/app
    networks:
      - net

  api:
    container_name: airport-api
    depends_on:
      db:
        condition: service_started
      api-build:
        condition: service_completed_successfully
    image: mcr.microsoft.com/dotnet/aspnet:8.0
    volumes:
      - api-app:/app:ro
    working_dir: /app
    networks:
      - net
    ports:
      - 5000:80
    environment:
      CONNECTION_STRING: Host=db;Database=airport;Username=postgres;Password=postgres
      ASPNETCORE_ENVIRONMENT: Development
    entrypoint: "./AirportAPI"

  web-build:
    container_name: airport-web-build
    image: node:latest
    working_dir: /app
    volumes:
      - ./AirportWeb:/app
      - web-app:/app/dist
    networks:
      - net
    command: >
      bash -c "npm install &&
               npm run build &&
               cp /app/conf/.htaccess /app/dist"

  web:
    container_name: airport-web
    image: httpd:latest
    volumes:
      - web-app:/usr/local/apache2/htdocs/
      - ./AirportWeb/conf/httpd-custom.conf:/usr/local/apache2/conf/httpd-custom.conf
    command: >
      /bin/bash -c "cat /usr/local/apache2/conf/httpd-custom.conf >> /usr/local/apache2/conf/httpd.conf &&
                    httpd-foreground"
    networks:
      - net
    ports:
      - "8080:80"
    depends_on:
      - web-build

volumes:
  db-data:
    name: airport-db-data
  api-app:
    name: airport-api-app
  web-app:
    name: airport-web-app

networks:
  net:
    name: airport-network
